name: Deploy to Kubernetes

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'qa'
        type: choice
        options:
          - qa
          - prd

jobs:
  build_and_deploy:
    runs-on: 
      - self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: jamilusman/webserver

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker

    - name: Verify Docker Installation
      run: |
        docker --version

    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        minikube version

    - name: Set up Minikube
      run: |
        minikube start --driver=docker
        kubectl config use-context minikube

    - name: Try the cluster !
      run: kubectl get pods -A
    - name: Build image
      run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          docker build -f ./Dockerfile -t jamilusman/nginx:latest .
          echo -n "verifying images:"
          docker images

    - name: Deploy to Kubernetes
      run: |

        helm upgrade webapp-release-qa webapp/ --values webapp/values.yaml -f webapp/values-qa.yaml -n qa

        # Use Helm to deploy with the appropriate values file
        # helm upgrade --install my-release ./charts \
        #   --namespace ${{ github.event.inputs.environment }} \
        #   --values values-${{ github.event.inputs.environment }}.yaml

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f templates/configmap.yaml
        kubectl apply -f templates/deployment.yaml
        kubectl apply -f templates/service.yaml

    # - name: Verify deployment
    #   run: |
    #     kubectl rollout status deployment/nginx-deployment
    #     kubectl get pods