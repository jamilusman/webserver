name: Deploy to Kubernetes

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'qa'
        type: choice
        options:
          - qa
          - prd

jobs:
  build_and_deploy:
    runs-on: 
      - ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: jamilusman/webserver

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Verify Docker Installation
      run: |
        docker --version

    - name: Start minikube
      uses: medyagh/setup-minikube@latest

    - name: Create Kubernetes namespaces
      run: |
        kubectl create namespace qa || true
        kubectl create namespace prd || true

    - name: Build image
      run: |
        docker build -f ./Dockerfile -t nginx:latest .

    - name: Deploy to Kubernetes
      run: |
        helm install webapp-release-qa ./ --values ./values.yaml -f ./values-qa.yaml -n qa
        helm install webapp-release-prd ./ --values ./values.yaml -f ./values-prd.yaml -n prd

        # Use Helm to deploy with the appropriate values file
        # helm upgrade --install my-release ./charts \
        #   --namespace ${{ github.event.inputs.environment }} \
        #   --values values-${{ github.event.inputs.environment }}.yaml

    # - name: Apply Kubernetes manifests
    #   run: |
    #     kubectl apply -f templates/configmap.yaml
    #     kubectl apply -f templates/deployment.yaml
    #     kubectl apply -f templates/service.yaml

    - name: Test service URLs
      run: |
        kubectl get pods -A
        kubectl get svc -A

    - name: Wait for Pods to be Ready
      run: |
        kubectl wait --for=condition=available --timeout=300s deployment/nginxapp --namespace qa
        kubectl wait --for=condition=ready --timeout=300s pod -l app=nginxapp --namespace qa
        
    - name: Verify deployment
      run: |
        kubectl --namespace qa port-forward service/nginxapp 8888:80